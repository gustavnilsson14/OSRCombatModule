:root {
  --gap: 6px;
  --half-gap: 3px;
}
body {
  display: flex;
  flex-direction: row;
  height: 100vh;
}
nav {
  flex: 0 1 0;
  min-width: 24px;
  position: relative;
  height: 100%;
  overflow: hidden;
  display: flex;
  transition: 0.3s all;
}
nav > *:not(button[toggle]) {
  opacity: 0;
  pointer-events: none;
}
nav.in > *:not(button[toggle]) {
  opacity: 1;
  pointer-events: all;
}
nav.in {
  flex: 0.6 1 0;
}
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: source;
  text-align: center;
  margin: 4px 0px 2px 0px;
}
map {
  display: block;
  gap: var(--gap);
  counter-set: row-no 0;
  width: 100%;
  height: 100vh;
  overflow-x: scroll;
  overflow-y: scroll;
  cursor: grab;
}
map-frame {
  display: flex;
  position: relative;
  overflow: hidden;
  border: 1px solid black;
  flex: 1 1 0;
  height: calc(100vh - 2px);
  background: #ddd;
}
map-frame instructions {
  position: absolute;
  display: block;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-size: 12px;
  z-index: 99999;
  pointer-events: none;
}
map-inner {
  top: 0px;
  left: 0px;
  position: relative;
  display: inline-block;
  padding: 1000px;
  justify-content: center;
  flex-direction: column;
}
row {
  display: flex;
  flex-direction: row;
  position: relative;
}
box {
  display: flex;
  flex-direction: column;
  flex: 1 1 0;
}
map row {
  counter-increment: row-no;
  z-index: counter(row-no);
  height: 90px;
  gap: var(--gap);
  flex: none;
  flex-grow: none;
  justify-content: center;
  pointer-events: none;
}
map row * {
  pointer-events: none;
}
hex {
  display: inline;
  position: relative;
  height: 170px;
  width: 135px;
  filter: drop-shadow(3px 3px 3px #000);
  transform: scale(1);
  animation: hexIn 1s;
  transition: 0.5s all;
  cursor: pointer;
}
hex * {
  transition: 0.5s all;
}
hex.hover,
hex.selected {
  z-index: 9;
  transform: scale(1.2);
}
hex .tile-mask {
  overflow: hidden;
}
hex .tile-mask,
hex texture-container,
hex content-container {
  display: inline;
  position: absolute;
  height: 100%;
  width: 100%;
}
hex content-container {
  pointer-events: none;
  transform: translateY(-25px);
}
hex texture-container {
  transform: rotateX(45deg);
}
hex texture-container texture {
  background-size: contain;
}

hex vertical {
  transform: rotateZ(60deg);
}
hex right-tilt {
  transform: rotateZ(60deg);
}
hex left-tilt {
  transform: rotateZ(-120deg);
}
hex inner {
  display: block;
  width: 200%;
  height: 100%;
  transform: translateX(-25%);
  pointer-events: all;
}
hex vertical inner:hover {
  transform: translateX(-25%);
}
hex inner * {
  display: block;
  position: absolute;
  height: 100%;
  width: 100%;
}
hex vertical inner ui {
  opacity: 0;
  background: #efe;
}
hex.selected vertical inner ui,
hex.hover vertical inner ui {
  opacity: 0.5;
}
row hex icon,
row hex shadow,
row hex cluster {
  position: absolute;
  width: 80%;
  height: 80%;
  left: 50%;
  top: 75%;
  transform: translateX(-50%) translateY(-100%);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: bottom;
  z-index: 1;
  display: none;
}
row hex[tile-type="landmark"] icon,
row hex[tile-type="landmark"] shadow {
  display: block;
}
row hex cluster {
  width: 0px;
  height: 0px;
  left: 50%;
  top: 72%;
  position: relative;
  display: none;
}
row hex cluster-image {
  position: absolute;
  display: none;
  width: 40px;
  height: 60px;
  transform: translateX(-50%) translateY(-100%);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: bottom;
  z-index: 2;
}
row hex[tile-type="water"] cluster-image {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  transform: translateX(-50%) translateY(-75%);
  background-size: cover;
}
row hex cluster-image:first-child {
  display: block;
}
row hex[neighbor1_-1] cluster-image:nth-child(2),
row hex[neighbor-1_-1] cluster-image:nth-child(3) {
  top: -30px;
  z-index: 1;
  display: block;
}
row hex[neighbor1_1] cluster-image:nth-child(6),
row hex[neighbor-1_1] cluster-image:nth-child(7) {
  top: 30px;
  z-index: 3;
  display: block;
}
row hex cluster-image:nth-child(2),
row hex cluster-image:nth-child(6) {
  left: 25px;
}
row hex cluster-image:nth-child(3),
row hex cluster-image:nth-child(7) {
  left: -25px;
}
row hex[neighbor2_0] cluster-image:nth-child(4) {
  left: 45px;
  display: block;
}
row hex[neighbor-2_0] cluster-image:nth-child(5) {
  left: -45px;
  display: block;
}
row hex shadow {
  transform: translateX(0%) translateY(-100%) skew(-46deg, 0deg);
  filter: brightness(0) blur(3px);
  opacity: 0.2;
  z-index: 0;
}
row hex icon.animate {
  animation: iconRender 0.5s;
}
row hex shadow.animate {
  animation: shadowRender 0.5s;
}
row hex name {
  position: absolute;
  bottom: 10px;
  left: 50%;
  white-space: nowrap;
  transform: translateX(-50%);
  font-family: medula;
  color: black;
  background-color: rgba(255, 255, 255, 0.75);
  border-radius: 5px;
  padding: 0px 3px;
  font-size: 28px;
  text-transform: uppercase;
  z-index: 9;
}
row hex:hover name {
  transform: translateX(-50%) translateY(-8px) scale(1.3);
  background-color: rgba(0, 0, 0, 0);
}
row hex.selected name {
  transform: translateX(-50%) translateY(-8px) scale(1.3);
  background-color: rgba(0, 0, 0, 0);
}
.template {
  display: none;
}
selected-hex {
  display: none;
}
selected-hex.visible {
  display: flex;
  flex-direction: column;
  pointer-events: all;
  justify-content: flex-start;
  min-height: 0;
  flex: 1 1 0;
}
selected-hex input {
  align-self: center;
  padding: 10px;
  font-family: source;
  font-size: 18px;
  width: 80%;
}
selected-hex textarea {
  flex: 1 1 0;
}
selected-hex row.tile-type {
  flex: 0 0 0;
}
selected-hex row.tile-type label {
  flex-direction: column;
  flex: 1 1 0;
}
selected-hex row.tile-type label,
selected-hex row.tile-type span,
selected-hex row.tile-type input {
  display: flex;
  justify-content: center;
  width: 100%;
}
selected-hex row.tile-type label:hover {
  text-decoration: underline;
}

clouds {
  position: absolute;
  top: 0px;
  left: 0px;
  background-image: url(../img/map/clouds.png);
  width: 100%;
  height: 100%;
  z-index: 9999;
  opacity: 0.1;
  background-size: 500%;
  pointer-events: none;
  filter: blur(20px);
  animation: cloudPan 15s;
  animation-iteration-count: infinite;
}
tile-type-options {
  display: flex;
  flex: 3 0 0;

  overflow: hidden;
}
icons,
textures {
  display: flex;
  overflow-x: hidden;
  overflow-y: scroll;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-content: flex-start;
  width: calc(100% -2px);
  flex: 1;
  gap: 5px;
  border: 1px solid black;
  margin-bottom: 5px;
}
icons icon,
textures texture {
  display: flex;
  flex-direction: column;
  flex: 0 1 0;
}
icons icon-inner,
textures texture-inner {
  cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 3px;
  border: 3px dotted black;
}
icons icon-img,
textures texture-img {
  display: flex;
  width: 50px;
  height: 50px;
  background-position: center;
  background-size: contain;
  background-repeat: no-repeat;
  font-weight: bold;
  text-align: center;
}
icons .selected icon-inner,
textures .selected texture-inner {
  background-color: #dfd;
  border: 3px solid green;
}
button[toggle] {
  position: absolute;
  top: 0px;
  right: 0px;
}
button.chevronToggle::before {
  content: ">";
}
button.chevronToggle.in::before {
  content: "<";
}
@keyframes cloudPan {
  0% {
    filter: blur(10px);
    transform: rotate(0deg);
  }
  50% {
    filter: blur(30px);
    transform: rotate(15deg);
  }
  100% {
    filter: blur(10px);
    transform: rotate(0deg);
  }
}
@keyframes hexIn {
  from {
    transform: rotateY(90deg);
  }
  to {
    transform: rotateY(0deg);
  }
}

@keyframes iconRender {
  0% {
    opacity: 0;
    transform: translateX(-50%) translateY(-150%) scale(0.4);
  }
  100% {
    opacity: 1;
    transform: translateX(-50%) translateY(-100%) scale(1);
  }
}

@keyframes shadowRender {
  0% {
    transform: translateX(-25%) translateY(-100%) skew(-0deg, 0deg) scale(0.4);
    opacity: 0;
  }
  100% {
    transform: translateX(0%) translateY(-100%) skew(-46deg, 0deg) scale(1);
    opacity: 0.2;
  }
}
